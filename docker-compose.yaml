services:

  db:
    image: postgres
    container_name: ${PG_HOST}
    restart: unless-stopped
    ports:
      - "${PG_PORT}:5432"
    command: postgres -c 'max_connections=250'
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DATABASE}
    env_file:
      - .env
    healthcheck:
       test: ["CMD-SHELL", "pg_isready", "-U", "${PG_USER}", "-d", "${PG_DATABASE}"]
       interval: 10s
       timeout: 5s
       retries: 5
    volumes:
      - ./app_data:/var/lib/postgresql/data

  searcher:
    build:
      dockerfile: Dockerfile
    container_name: wb_searcher
    env_file:
      - .env
    volumes:
      - ./logs:/app_data/logs/searcher
    ports:
      - "9013:9013"
    depends_on:
      db:
        condition: service_healthy

#  redis:
#    image: redis:alpine
#
#  celery:
#    build: .
#    entrypoint: celery -A tasks.celery_app worker --loglevel=info
#    volumes:
#      - ./logs:/app_data/logs/celery
#    depends_on:
#      - redis
#
#  celery-beat:
#    build: .
#    entrypoint: celery -A tasks.celery_app beat --loglevel=info
#    volumes:
#      - ./logs:/app_data/logs/celery_beat
#    depends_on:
#        - redis
#

networks:
  wb_search:
